{"version":3,"sources":["components/contactsForm/ContactsForm.js","components/contacts/contactsListItem/ContactsListItem.js","components/contacts/ContactsList.js","components/searchForm/SearchForm.js","components/section/Section.js","components/main/Main.js","App.js","index.js"],"names":["ContactsForm","state","name","number","id","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onNameCheck","length","alert","addNewContact","reset","className","onSubmit","this","type","onChange","placeholder","pattern","title","required","Component","ContactsListItem","removeContact","onClick","ContactsList","contacts","map","contact","key","SearchForm","onSearchHandler","filter","Section","children","Main","newName","toLowerCase","prev","prevState","onFilterRender","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RA0EeA,E,4MAtEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,GACRC,GAAI,I,EAGNC,YAAcC,IAAQC,W,EAEtBC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,UAAL,mBACGV,EAAOS,GADV,mBAEML,IAAQC,YAFd,K,EAMFM,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,YAAY,EAAKf,MAAMC,MAAMe,QAAU,EAC9CC,MAAM,yBAAD,OAA0B,EAAKjB,MAAMC,KAArC,qBACL,EAAKa,MAAMI,cAAc,EAAKlB,OAElC,EAAKmB,S,EAGPA,MAAQ,WACN,EAAKR,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMkB,UAAU,OAAOC,SAAUC,KAAKV,aAAtC,UACE,wBAAOQ,UAAU,YAAjB,iBAEE,uBACEA,UAAU,YACVG,KAAK,OACLtB,KAAK,OACLS,MAAOY,KAAKtB,MAAMC,KAClBE,GAAImB,KAAKlB,YACToB,SAAUF,KAAKf,aACfkB,YAAY,aACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,wBAAOR,UAAU,YAAjB,yBAEE,uBACEA,UAAU,aACVG,KAAK,OACLtB,KAAK,SACLwB,YAAY,qBACZf,MAAOY,KAAKtB,MAAME,OAClBsB,SAAUF,KAAKf,kBAInB,wBAAQgB,KAAK,SAASH,UAAU,YAAhC,gC,GA/DmBS,a,QCiBZC,EAlBU,SAAC,GAAyC,IAAvC7B,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,GAAI4B,EAAoB,EAApBA,cAC5C,OACE,qBAAIX,UAAU,mBAAmBjB,GAAIA,EAArC,UACE,oBAAGiB,UAAU,cAAb,UAA4BnB,EAA5B,OACCC,EACD,wBACEkB,UAAU,YACVG,KAAK,SACLS,QAAS,WACPD,EAAc5B,IAJlB,sBAH4CA,ICanC8B,EAdM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUH,EAAoB,EAApBA,cAChC,OACE,oBAAIX,UAAU,eAAd,SACGc,EAASC,KAAI,SAACC,GAAD,OACZ,wBAAC,EAAD,2BACMA,GADN,IAEEL,cAAeA,EACfM,IAAKD,EAAQjC,YCQRmC,EAhBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OACrC,OACE,wBAAOpB,UAAU,kBAAjB,kCAEE,uBACEA,UAAU,cACVG,KAAK,OACLtB,KAAK,OACLwB,YAAY,aACZf,MAAO8B,EACPhB,SAAUe,QCAHE,G,MATC,SAAC,GAAyB,IAAvBd,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAItB,UAAU,eAAd,SAA8BO,IAC7Be,OC8EQC,E,4MA7Eb3C,MAAQ,CACNkC,SAAU,CACR,CAAE/B,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAEhDsC,OAAQ,I,EAGVzB,YAAc,SAAC6B,GACb,OAAO,EAAK5C,MAAMkC,SAASM,QACzB,SAACJ,GAAD,OAAaA,EAAQnC,KAAK4C,gBAAkBD,EAAQC,kB,EAIxD3B,cAAgB,SAACkB,GACf,EAAKzB,UAAS,SAACmC,GAAD,MAAW,CAAEZ,SAAS,GAAD,mBAAMY,EAAKZ,UAAX,CAAqBE,S,EAG1DL,cAAgB,SAAC5B,GACf,EAAKQ,UAAS,SAACoC,GAAD,MAAgB,CAC5Bb,SAAUa,EAAUb,SAASM,QAAO,SAACJ,GAAD,OAAaA,EAAQjC,KAAOA,U,EAIpEoC,gBAAkB,SAAC/B,GACjB,EAAKG,SAAS,CAAE6B,OAAQhC,EAAEC,cAAcC,S,EAG1CsC,eAAiB,WACf,OAAO,EAAKhD,MAAMkC,SAASM,QAAO,SAACJ,GAAD,OAChCA,EAAQnC,KAAK4C,cAAcI,SAAS,EAAKjD,MAAMwC,OAAOK,mB,uDAI1D,WACE,IAAMX,EAAWgB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMpB,GAC9BkB,GACF9B,KAAKX,SAAS,CAAEuB,SAAUkB,M,gCAI9B,SAAmBG,EAAWR,GACxBzB,KAAKtB,MAAMkC,WAAaa,EAAUb,UACpCgB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUnC,KAAKtB,MAAMkC,a,oBAI/D,WACE,IAAMwB,EAAmBpC,KAAK0B,iBAE9B,OACE,qCACE,cAAC,EAAD,CAASrB,MAAM,YAAf,SACE,cAAC,EAAD,CACEZ,YAAaO,KAAKP,YAClBG,cAAeI,KAAKJ,kBAGxB,eAAC,EAAD,CAASS,MAAM,WAAf,UACE,cAAC,EAAD,CACEY,gBAAiBjB,KAAKiB,gBACtBC,OAAQlB,KAAKtB,MAAMwC,SAErB,cAAC,EAAD,CACEN,SAAUwB,EACVV,eAAgB1B,KAAK0B,eACrBjB,cAAeT,KAAKS,0B,GAtEbF,aCMJ8B,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bb648627.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      id: shortid.generate(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onNameCheck(this.state.name).length >= 1\r\n      ? alert(`Contact with the name ${this.state.name} already exists.`)\r\n      : this.props.addNewContact(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"formLabel\">\r\n          Name\r\n          <input\r\n            className=\"nameInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            id={this.nameInputId}\r\n            onChange={this.handleChange}\r\n            placeholder=\"enter name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"formLabel\">\r\n          Phone number\r\n          <input\r\n            className=\"phoneInput\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"enter phone number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\n\r\nconst ContactsListItem = ({ name, number, id, removeContact }) => {\r\n  return (\r\n    <li className=\"contactsListItem\" id={id} key={id}>\r\n      <b className=\"contactName\">{name}:</b>\r\n      {number}\r\n      <button\r\n        className=\"deleteBtn\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          removeContact(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\n\r\nconst ContactsList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {contacts.map((contact) => (\r\n        <ContactsListItem\r\n          {...contact}\r\n          removeContact={removeContact}\r\n          key={contact.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst SearchForm = ({ onSearchHandler, filter }) => {\r\n  return (\r\n    <label className=\"searchFormLabel\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"searchField\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"enter name\"\r\n        value={filter}\r\n        onChange={onSearchHandler}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport ContactsForm from \"../contactsForm/ContactsForm\";\r\nimport ContactsList from \"../contacts/ContactsList\";\r\nimport SearchForm from \"../searchForm/SearchForm\";\r\nimport Section from \"../section/Section\";\r\nimport \"../../index.css\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  onNameCheck = (newName) => {\r\n    return this.state.contacts.filter(\r\n      (contact) => contact.name.toLowerCase() === newName.toLowerCase()\r\n    );\r\n  };\r\n\r\n  addNewContact = (contact) => {\r\n    this.setState((prev) => ({ contacts: [...prev.contacts, contact] }));\r\n  };\r\n\r\n  removeContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  onSearchHandler = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  onFilterRender = () => {\r\n    return this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredContacts = this.onFilterRender();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactsForm\r\n            onNameCheck={this.onNameCheck}\r\n            addNewContact={this.addNewContact}\r\n          />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <SearchForm\r\n            onSearchHandler={this.onSearchHandler}\r\n            filter={this.state.filter}\r\n          />\r\n          <ContactsList\r\n            contacts={filteredContacts}\r\n            onFilterRender={this.onFilterRender}\r\n            removeContact={this.removeContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./components/main/Main\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}